{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentSum","setCurrentSum","currentMultiple","setCurrentMultiple","clear","setClear","useEffect","document","querySelector","value","Add","e","preventDefault","currentNum1","parseInt","currentNum2","currentNum3","sum","multiple","className","Container","Form","Group","controlId","Label","Control","onChange","placeholder","id","Button","onClick","console","log","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAyEeA,MArEf,WACE,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+CF,mBAAS,GAAxD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,SAASC,cAAc,YAAYC,MAAQ,GAC3CF,SAASC,cAAc,YAAYC,MAAQ,KAC1C,IAEHH,qBAAU,WACJF,IACFG,SAASC,cAAc,YAAYC,MAAQ,IAC3CF,SAASC,cAAc,YAAYC,MAAQ,MAG/C,IAAMC,EAAM,SAACC,GACXA,EAAEC,iBACER,GAAOC,GAAS,GACpB,IAAIQ,EAAcC,SAASP,SAASC,cAAc,SAASC,OACvDM,EAAcD,SAASP,SAASC,cAAc,SAASC,OACvDO,EAAcF,SAASP,SAASC,cAAc,SAASC,OAC3D,GAAmB,IAAfI,GAAoC,IAAfE,GAAoC,IAAfC,EAA9C,CAEA,IAAIC,EAAMJ,EAAcE,EACpBG,EAAWD,EAAMD,EACrBf,EAAcgB,GACdd,EAAmBe,KAYrB,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,qBAAKD,UAAU,YAAf,SACE,qDAEF,eAACE,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYH,UAAU,OAAOI,UAAU,OAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,2CACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,SAAUhB,EAAKiB,YAAY,oBAE3C,eAACN,EAAA,EAAKC,MAAN,CAAYH,UAAU,OAAOI,UAAU,OAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,SAAUhB,EAAKiB,YAAY,oBAE3C,eAACN,EAAA,EAAKC,MAAN,CAAYH,UAAU,OAAOI,UAAU,OAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,SAAUhB,EAAKiB,YAAY,kCAI7C,sBAAKR,UAAU,OAAOS,GAAG,UAAzB,yBAAgD5B,EAAhD,WACA,sBAAKmB,UAAU,OAAOS,GAAG,UAAzB,wBAA+C1B,EAA/C,cACA,iDACA,cAAC2B,EAAA,EAAD,CAAQC,QAjCA,SAACnB,GACbA,EAAEC,iBACFmB,QAAQC,IAAI,OAAQhC,GACpBO,SAASC,cAAc,QAAQyB,QAC/B5B,GAAS,GACTJ,EAAc,GACdE,EAAmB,IA2Bf,yBCvDO+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BZ,M","file":"static/js/main.a936b2d8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  const [currentSum, setCurrentSum] = useState(0);\r\n  const [currentMultiple , setCurrentMultiple] = useState(0);\r\n  const [clear, setClear] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.querySelector('#result1').value = \"\";\r\n    document.querySelector('#result2').value = \"\";\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (clear)\r\n      document.querySelector('#result1').value = \"\";\r\n      document.querySelector('#result2').value = \"\";\r\n  })\r\n\r\n  const Add = (e) => {\r\n    e.preventDefault();\r\n    if (clear) setClear(false);\r\n    let currentNum1 = parseInt(document.querySelector('#num1').value)\r\n    let currentNum2 = parseInt(document.querySelector('#num2').value)\r\n    let currentNum3 = parseInt(document.querySelector('#num3').value)\r\n    if (currentNum1 == '' || currentNum2 == '' || currentNum3 == '')\r\n      return;\r\n    let sum = currentNum1 - currentNum2;\r\n    let multiple = sum * currentNum3;\r\n    setCurrentSum(sum);\r\n    setCurrentMultiple(multiple);\r\n  }\r\n\r\n  const Clear = (e) => {\r\n    e.preventDefault();\r\n    console.log('sum:', currentSum);\r\n    document.querySelector('form').reset();\r\n    setClear(true);\r\n    setCurrentSum(0);\r\n    setCurrentMultiple(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n        <div className=\"app-title\">\r\n          <h1>Nekoma Calculator</h1>\r\n        </div>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"num1\">\r\n            <Form.Label>Jumlah item yang di inginkan</Form.Label>\r\n            <Form.Control onChange={Add} placeholder=\"Input jumlah\" />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"num2\">\r\n            <Form.Label>Jumlah item di inventory</Form.Label>\r\n            <Form.Control onChange={Add} placeholder=\"Input jumlah\" />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"num3\">\r\n            <Form.Label>Harga di exchange</Form.Label>\r\n            <Form.Control onChange={Add} placeholder=\"Input harga di exchange\" />\r\n          </Form.Group>\r\n          \r\n        </Form>\r\n        <div className=\"mb-3\" id=\"result1\">Kamu kurang {currentSum} item</div>\r\n        <div className=\"mb-3\" id=\"result2\">Kamu butuh {currentMultiple} crystal</div>\r\n        <div>Kamu menghemat</div>\r\n        <Button onClick={Clear}>Clear</Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}